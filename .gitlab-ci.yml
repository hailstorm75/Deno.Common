image: mono:latest

variables:
  BUILD_CONF: 'Debug'
  RELEASE_CONF: 'Release'
  PROJ_NAME: 'Common'
  UT_PREFIX: 'UnitTestCommon'
  TEST_RUNNER: 'NUnit.ConsoleRunner'

  TEST_RUNNER_W_VER: '${TEST_RUNNER}.3.9.0'
  PATH_TO_TESTS: 'bin/Tests/${BUILD_CONF}/'
  PATH_TO_RELEASE: 'bin/Libraries/${RELEASE_CONF}/'

stages:
  - build
  - test
  - release

build_job:
  stage: build
  script:
  - 'nuget restore ${PROJ_NAME}/${PROJ_NAME}.sln'
  - 'MONO_IOMAP=case msbuild /t:Build /p:Configuration=${BUILD_CONF} /p:Platform="Any CPU" ${PROJ_NAME}/${PROJ_NAME}.sln'
  cache:
    key: binaries
    paths:
    - '${PATH_TO_TESTS}'
    policy: push
  except:
  - tags

test_job:
  stage: test
  cache:
    key: binaries
    paths:
    - '${PATH_TO_TESTS}'
    policy: pull
  script:
  - 'apt-get -qq update -y'
  - 'apt-get -qq install unzip'
  - 'nuget install ${TEST_RUNNER}'
  - 'unzip ${TEST_RUNNER_W_VER}/${TEST_RUNNER_W_VER}.nupkg'
  - 'chmod -R 777 tools'

  # Black magic.png
  # 1. Runs testing for each .dll file
  # 2. Removes output header information
  # 3. Removes output run settings information
  # 4. Removes footer
  # 5. Writes to file
  - 'touch TestResults.txt'
  - for i in $(ls ${PATH_TO_TESTS}*.dll | egrep ^*/${UT_PREFIX}*); do mono tools/nunit3-console.exe $i | awk '/Test Files/'{f=1}f{print} | awk -v regex="Run Settings" -v count="8"  '$0 ~ regex { skip=count; next } --skip >= 0 { next } 1' | head -n -1 >> TestResults.txt; done
  artifacts:
    paths:
    - 'TestResults.txt'
    expire_in: 1 day
  except:
  - tags

release_job:
 stage: release
 script:
  - 'nuget restore ${PROJ_NAME}/${PROJ_NAME}.sln'
  - 'MONO_IOMAP=case msbuild /t:Build /p:Configuration=${RELEASE_CONF} /p:Platform="Any CPU" ${PROJ_NAME}/${PROJ_NAME}.sln'
  - 'rm ${PATH_TO_RELEASE}*.pdb'
 artifacts:
   paths:
   - '${PATH_TO_RELEASE}'
   expire_in: 1 week
 when: manual
